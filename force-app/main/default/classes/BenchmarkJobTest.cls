@IsTest
private class BenchmarkJobTest {
	@IsTest
	static void shouldRunBenchmarkJob() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldHandleErrorsDuringSetup() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldHandleErrorsDuringBenchmarking() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldHandleInvalidBenchmarkableObject() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldLaunchNextJob() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldNotLaunchJobIfNoNext() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldNotRunIfInactive() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldNotRunInProductionIfExcluded() {
		Assert.fail('You still need to build this test');
	}

	@IsTest
	static void shouldNotRunInSandboxIfExcluded() {
		Assert.fail('You still need to build this test');
	}
}
